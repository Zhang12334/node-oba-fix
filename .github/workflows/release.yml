name: "Release Binary"

on:
  push:
    branches:
      - main # 可以指定要监听的分支，如 main

jobs:
  build-tar-ball:
    name: "Build and Tar Ball"
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: "openbmclapi-linux.tar.xz"
          - os: windows-latest
            artifact_name: "openbmclapi-windows.tar.gz"
          - os: macos-latest
            artifact_name: "openbmclapi-macos.tar.xz"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm install
      ## linux & macos
      - run: npm run build
      - run: |
          cp $(which node) .
          cp platforms/linux/run.sh .
          tar -caf ${{ matrix.artifact_name }} dist nginx package.json node_modules run.sh
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

      ## windows
      - run: |
          $SRC = (Get-Command node.exe).Path
          copy $SRC node.exe
          copy platforms/windows/run.ps1 .
          tar -caf ${{ matrix.artifact_name }} dist package.json node_modules node.exe run.ps1
        if: matrix.os == 'windows-latest'

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}